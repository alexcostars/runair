/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetotao;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 *
 * @author guiarrd
 */
public class TelaAdicionarProdutoEstoque extends javax.swing.JFrame {

    /**
     * Creates new form TelaAdicionarProdutoEstoque
     */
    public TelaAdicionarProdutoEstoque() {
        initComponents();
        setLocationRelativeTo(null);
        
        JB_Adicionar.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "adicionar");
        //Se for a letra "A", coloca uma ação de clique no botão e executa o que está no método actionPerformed
        JB_Adicionar.getActionMap().put("adicionar", new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent a) {

                adicionar();

            }
        });
        
        JB_Cancelar.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cancelar");
        //Se for a letra "A", coloca uma ação de clique no botão e executa o que está no método actionPerformed
        JB_Cancelar.getActionMap().put("cancelar", new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent a) {

                dispose();
                
            }
        });
        
        
        
        

        Produto p = new Produto(1);

        //jComboBox1.
        String[][] lista_produtos = new String[2000][];

        try {

            lista_produtos = p.getListaProdutos();

        } catch (ProjetoException erp) {
            JOptionPane.showMessageDialog(null, "Houve um erro ao obter a lista de produtos!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        for (int cont = 0; cont < lista_produtos.length; cont++) {

            JCB_Produto.addItem(new ComboItem(lista_produtos[cont][0], lista_produtos[cont][1]));

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JCB_Produto = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        JTF_Quantidade = new javax.swing.JTextField();
        JB_Adicionar = new javax.swing.JButton();
        JB_Cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Adicionar Produtos ao Estoque");

        jLabel2.setText("Produto:");

        jLabel4.setText("Quantidade:");

        JB_Adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetotao/add.png"))); // NOI18N
        JB_Adicionar.setToolTipText("Pressione ENTER para ADICIONAR");
        JB_Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_AdicionarActionPerformed(evt);
            }
        });

        JB_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetotao/delete.png"))); // NOI18N
        JB_Cancelar.setToolTipText("Pressione ESC para CANCELAR");
        JB_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JCB_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JB_Adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JB_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(JTF_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(100, 100, 100)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JCB_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTF_Quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JB_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JB_Adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JB_AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_AdicionarActionPerformed

        adicionar();
        
    }//GEN-LAST:event_JB_AdicionarActionPerformed

    private void JB_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_CancelarActionPerformed

        dispose();

    }//GEN-LAST:event_JB_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarProdutoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarProdutoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarProdutoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarProdutoEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAdicionarProdutoEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_Adicionar;
    private javax.swing.JButton JB_Cancelar;
    private javax.swing.JComboBox JCB_Produto;
    private javax.swing.JTextField JTF_Quantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    Produto prod = new Produto(1);

    private String[][] verificarProduto() {

        CoreSql c = new CoreSql();
        String sql = "SELECT * FROM b_produto_estoques;";
        String[][] retorno = c.executarQuery(sql, true, new String[]{"produto_id", "quantidade"});
        if (retorno == null) {

            JOptionPane.showMessageDialog(null, "Não existem produtos no estoque!", "Erro", JOptionPane.ERROR_MESSAGE);

        }
        return retorno;

    }
    
    public void adicionar(){
        
        ComboItem item_selecionado = (ComboItem) JCB_Produto.getSelectedItem();;
        CoreSql c = new CoreSql();
        String sql = "", codigo = item_selecionado.codigo;
        Boolean igual = false;

        String data = "yyyy-MM-dd";
        String hora = "HH:mm:ss";
        String data1, hora1;

        java.util.Date agora = new java.util.Date();
        SimpleDateFormat formata = new SimpleDateFormat(data);
        data1 = formata.format(agora);
        formata = new SimpleDateFormat(hora);
        hora1 = formata.format(agora);

        prod = new Produto(Integer.parseInt(codigo));
        if (JTF_Quantidade.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Informe a quantidade de produtos a serem adicionados", "Campo Obrigatório", JOptionPane.ERROR_MESSAGE);

        } else {

            try {
                // String[][] retorno = verificarProduto();

//            for (int i = 0; i < retorno.length; i++) {
//
                if (prod.possuiRegistroNaTabelaDeEstoque()) {
                    prod.quantidade = Integer.parseInt(JTF_Quantidade.getText());
                    sql = "UPDATE b_produto_estoques SET quantidade = " + prod.quantidade + ", data_hora_lancamento = '" + data1 + " " + hora1 + "' WHERE produto_id = " + codigo;
                    c.executarQuery(sql, false, null);
                    JOptionPane.showMessageDialog(null, "Produto atualizado no estoque!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    prod.valor_compra = 0; //prod.valor_compra = Double.parseDouble(vlr_compra);
                    prod.quantidade = Integer.parseInt(JTF_Quantidade.getText());

                    sql = "INSERT INTO b_produto_estoques (produto_id, data_hora_lancamento, quantidade) VALUES (" + prod.codigo + ", '" + data1 + " " + hora1 + "', " + prod.quantidade + ");";
                    c.executarQuery(sql, false, null);
                    JOptionPane.showMessageDialog(null, "O produto foi adicionado ao estoque!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (ProjetoException ex) {
                Logger.getLogger(TelaAdicionarProdutoEstoque.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
    }

}
